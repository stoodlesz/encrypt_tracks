{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red199\green203\blue211;\red52\green54\blue66;}
{\*\expandedcolortbl;;\cssrgb\c81961\c83529\c85882;\cssrgb\c26667\c27451\c32941;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. First test of xor_test.py, this file is for the encryption process and decryption\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.png \width16540 \height9820 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
Your code has been rated at 8.21/10\
\
2. \
{{\NeXTGraphic Pasted Graphic 1.png \width15960 \height9560 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
3. {{\NeXTGraphic Pasted Graphic 2.png \width19900 \height14400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
4. {{\NeXTGraphic Pasted Graphic 3.png \width10560 \height2800 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
 Ignored these errors, but 
\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The error message you've received indicates that there are too many local variables in your Python script, specifically in the file "xor_test.py". The error is raised by the Pylint linter with the code "R0914," and it has a severity level of 8.\
\pard\pardeftab720\sa400\partightenfactor0
\cf2 In Python, local variables are the variables defined within a function or a block of code. Having a large number of local variables in a function or a block can make the code harder to read, understand, and maintain. It can also be an indication that the function or block is trying to do too much and may be a sign of code complexity.\
In your case, the specific line in "xor_test.py" where this error is raised is line 42. Let's take a look at that line:
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 encrypted_lyrics = SongEncryptor.xor_encrypt(\
    new_lyrics.encode(), encryption_key\
)\
\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 From the given code snippet, it appears that this line is within the 
\f2\fs28 \cf2 \cb3 \strokec2 modify_song
\f1\fs32 \cf2 \cb3 \strokec2  method of the 
\f2\fs28 \cf2 \cb3 \strokec2 ArtistTools
\f1\fs32 \cf2 \cb3 \strokec2  class. While this single line itself doesn't seem to have an excessive number of local variables, it's possible that the method as a whole has multiple local variables, which have resulted in this error.\
To address this issue, you can consider refactoring the 
\f2\fs28 \cf2 \cb3 \strokec2 modify_song
\f1\fs32 \cf2 \cb3 \strokec2  method to reduce the number of local variables or breaking down some parts of the method into smaller helper functions. This will help improve code readability and maintainability.\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 Keep in mind that the "too-many-locals" error from Pylint is a warning to help you write more readable and maintainable code. While it's essential to address such issues, it's not a critical error that affects the functionality of your code. The severity level of 8 means it's a moderate concern, and it's up to you to decide how to handle it based on your code's specific context and requirements.\
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 \strokec2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
5. Using bandit: {{\NeXTGraphic Pasted Graphic 4.png \width11860 \height8160 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\pardeftab720\sa400\partightenfactor0

\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When you run the command "bandit xor_test.py" in your terminal, it executes the Bandit tool on the "xor_test.py" file to perform a security analysis on your Python code. Bandit is a security linter used to detect potential security vulnerabilities in Python code.\
The output you see contains various pieces of information:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "profile include tests": It indicates the security profiles that are being used to analyze the code. In this case, "None" means no specific profile has been provided, so the default profiles are used.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "profile exclude tests": It shows any specific tests excluded from the security analysis by the provided profile. Since "None" is shown here, no exclusions have been made.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "cli include tests": Similar to "profile include tests," it indicates the specific tests included in the analysis through the command-line interface. In this case, "None" means no specific test has been included.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "cli exclude tests": Similar to "profile exclude tests," it indicates any specific tests excluded from the analysis through the command-line interface. Again, "None" means no specific exclusion.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "running on Python 3.10.8": It tells you the version of Python being used to run Bandit.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "WARNING Unable to find qualified name for module: xor_test.py": This warning indicates that Bandit encountered an issue while trying to determine the qualified name for the "xor_test.py" module. It might be related to the way the module is imported or structured, but it doesn't seem to affect the analysis results.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Run started": It specifies the date and time when the security analysis started.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Test results": It presents the results of the security analysis. In this case, it says "No issues identified," which means Bandit didn't find any security issues or vulnerabilities in your code.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Code scanned": It provides some metrics related to the code under analysis, including the total lines of code and the number of lines skipped.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Run metrics": It presents the total number of issues identified by severity and confidence. In this case, "Total issues" are "0" for all severity and confidence levels, indicating that no security issues were found during the Bandit analysis.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Overall, the output confirms that Bandit found no security issues in your "xor_test.py" file, which is a good sign. It means that the code appears to be free from common security vulnerabilities that Bandit checks for.\
\
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 \strokec2 In your code, you are using several libraries. Here's a breakdown of the libraries and their justifications:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f2\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 logging
\f1\fs32 : The 
\f2\fs28 logging
\f1\fs32  module is used for recording log messages. This helps in debugging and understanding the flow of the program, especially when issues occur. The use of logging in your code is justified because it allows you to keep track of important events and error messages.\cb1 \
\ls2\ilvl0
\f2\fs28 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sqlite3
\f1\fs32 : The 
\f2\fs28 sqlite3
\f1\fs32  module is used to interact with SQLite databases. You use it to create and manage a SQLite database (
\f2\fs28 library.db
\f1\fs32 ) to store song-related information and encryption keys. This is justified as it provides a simple way to manage and store data within your application.\cb1 \
\ls2\ilvl0
\f2\fs28 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 os
\f1\fs32 : The 
\f2\fs28 os
\f1\fs32  module provides a way to interact with the operating system, and in your code, it's used to generate a random encryption key (
\f2\fs28 os.urandom
\f1\fs32 ) for XOR encryption. The use of 
\f2\fs28 os.urandom
\f1\fs32  is justified as it provides a secure way to generate a random encryption key, which is essential for encryption.\cb1 \
\ls2\ilvl0
\f2\fs28 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 hashlib
\f1\fs32 : The 
\f2\fs28 hashlib
\f1\fs32  module is used to calculate the SHA-256 checksum of the song lyrics. This checksum is stored in the database to ensure the integrity of the lyrics. The use of 
\f2\fs28 hashlib
\f1\fs32  is justified as it provides a secure way to generate checksums for data integrity verification.\cb1 \
\ls2\ilvl0
\f2\fs28 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 werkzeug.utils.secure_filename
\f1\fs32 : The 
\f2\fs28 secure_filename
\f1\fs32  function from the 
\f2\fs28 werkzeug.utils
\f1\fs32  module is used to sanitize the song filename before storing it in the database. This ensures that the filename doesn't contain any malicious characters or path separators. The use of 
\f2\fs28 secure_filename
\f1\fs32  is justified as it enhances the security of the application by preventing directory traversal attacks and other related issues.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 \strokec2 Overall, the libraries used in your code are justified and play important roles in implementing features like encryption, data storage, and security measures.\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 One suggestion for improvement would be to add comments to the code to explain the purpose of different sections and functions. This can make it easier for others (and yourself in the future) to understand the code better. Additionally, as mentioned earlier, providing docstrings for functions and methods can further improve code readability and maintainability.\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 \
- added docstrings and more comments in final version.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {{\NeXTGraphic Pasted Graphic 5.png \width11520 \height5900 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\fs32 \
\
Bandit again:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 6.png \width11220 \height8200 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}